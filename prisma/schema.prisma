// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


// Define the User model
model Users {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String    @unique
  mobile    String
  password  String
  otp       String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  customers Customer[]
  invoices  Invoice[]
}

// Define the Customer model
model Customer {
  id        Int       @id @default(autoincrement())
  name      String
  email     String?
  mobile    String
  user_id   BigInt
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      Users      @relation(fields: [userId], references: [id])
}

// Define the Category model
model Category {
  id        BigInt       @id @default(autoincrement())
  name      String
  user_id    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      Users      @relation(fields: [userId], references: [id])
  products  Products[]
}

// Define the Product model
model Products {
  id          BigInt      @id @default(autoincrement())
  name        String
  price       Float
  unit        String
  img_url     String?
  category_id BigInt
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  category    Category @relation(fields: [categoryId], references: [id])
  user      Users      @relation(fields: [userId], references: [id])
  invoiceProducts InvoiceProduct[]
}

// Define the Invoice model
model Invoice {
  id           Int      @id @default(autoincrement())
  total        Float
  discount     Float
  vat          Float
  payable      Float
  userId       Int
  customerId   Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User    @relation(fields: [userId], references: [id])
  customer     Customer @relation(fields: [customerId], references: [id])
  invoiceProducts InvoiceProduct[]
}

// Define the InvoiceProduct model (junction table for many-to-many relationship)
model InvoiceProduct {
  id          Int      @id @default(autoincrement())
  invoiceId   Int
  productId   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  invoice     Invoice  @relation(fields: [invoiceId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])
}
